<project xmlns="http://maven.apache.org/POM/4.0.0"
		xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
		xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

	<properties>
		<my.version>0.1-SNAPSHOT</my.version>
		<java.ai.int.src.dir>${basedir}/../../Interfaces/Java</java.ai.int.src.dir>
		<java.ai.int.build.dir>${java.ai.int.src.dir}</java.ai.int.build.dir>
		<java.ai.int.jlib.dir>${java.ai.int.src.dir}/data/jlib</java.ai.int.jlib.dir>
	</properties>

	<profiles>
		<profile>
			<id>stand-alone</id>
			<!--
				This profile expects the Java AI Interface libs and dependencies
				in a separate folder (default: ${basedir}/Java-AIInterface).
				Optional properties for this profile:
				* java.ai.int.src.dir
				  a dir containing the following files:
				  - AIInterface.jar
				  - AIInterface-src.jar
				  - jna.jar
				  - vecmath.jar
			-->
			<activation>
				<activeByDefault>true</activeByDefault>
			</activation>
			<properties>
				<java.ai.int.src.dir>${basedir}/Java-AIInterface</java.ai.int.src.dir>
				<java.ai.int.build.dir>${java.ai.int.src.dir}</java.ai.int.build.dir>
				<java.ai.int.jlib.dir>${java.ai.int.src.dir}</java.ai.int.jlib.dir>
			</properties>
		</profile>

		<profile>
			<id>custom</id>
			<!--
				Optional properties for this profile:
				* java.ai.int.build.dir
				  (where AIInterface.jar will be built, in case of
				   out-of-source build)
			-->
			<properties>
			</properties>
		</profile>

		<profile>
			<id>as-spring-subproject</id>
			<!--
				Optional properties for this profile:
				* java.ai.int.src.dir   (where data/jlib/*.jar can be found)
				* java.ai.int.build.dir (where AIInterface.jar will be built,
				                         in case of out-of-source build)
				* my.build.dir          (CAUTION: has to be relative to ${basedir};
				                         will fail with an absolute path!)
				* my.version
			-->
			<properties>
				<my.build.dir>target</my.build.dir>
			</properties>
			<build>
				<defaultGoal>package</defaultGoal>
				<finalName>SkirmishAI</finalName>
				<directory>${my.build.dir}</directory>
			</build>
		</profile>
	</profiles>

	<modelVersion>4.0.0</modelVersion>
	<groupId>gai</groupId>
	<artifactId>GAI</artifactId>
	<packaging>jar</packaging>
	<version>${my.version}</version>
	<name>General Artificial Intelligence</name>
	<url>http://springrts.com/wiki/AI:GAI</url>

	<build>
		<outputDirectory>${project.build.directory}/classes</outputDirectory>
		<testOutputDirectory>${project.build.directory}/test-classes</testOutputDirectory>

		<plugins>
			<!--
				Set source compatibility to 1.5, so Annotations are supported.
			-->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<configuration>
					<source>1.5</source>
					<target>1.5</target>
				</configuration>
			</plugin>

			<!--
				Modifies the jars manifest file,
				eg. adds the Main-Class attribute
			-->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
				<configuration>
					<archive>
						<manifest>
							<addClasspath>true</addClasspath>
							<classpathPrefix>dependency</classpathPrefix>
							<packageName>gai</packageName>
							<mainClass>gai.AIFactory</mainClass>
						</manifest>
					</archive>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-dependency-plugin</artifactId>
				<executions>
					<!--
						This copies the dependencies to the target/dependency dir
						during the package phase.
					-->
					<execution>
						<phase>generate-sources</phase>
						<goals>
							<goal>copy-dependencies</goal>
						</goals>
						<configuration>
							<outputDirectory>${project.build.directory}/jlib</outputDirectory>
							<excludeArtifactIds>jna,vecmath,Java-AIInterface</excludeArtifactIds>
						</configuration>
					</execution>
					<!--
						This generates a classpath out of all the dependencies
						of the project, valid on the local system, and stores
						it in a text file.
					-->
					<execution>
						<id>build-classpath</id>
						<phase>package</phase>
						<goals>
							<goal>build-classpath</goal>
						</goals>
						<configuration>
							<outputFile>${project.build.directory}/cp.txt</outputFile>
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>

	<scm>
		<connection>scm:git:git://github.com/hoijui/GAI.git</connection>
		<url>http://github.com/hoijui/GAI</url>
		<developerConnection>scm:git:git@github.com:hoijui/GAI.git</developerConnection>
	</scm>

	<dependencies>
		<!--
			For finding Maven dependencies, go to:
			http://www.mvnrepository.com/search.html
		-->
		<dependency>
			<groupId>com.springrts</groupId>
			<artifactId>Java-AIInterface</artifactId>
			<version>0.1</version>
			<scope>system</scope>
			<systemPath>${java.ai.int.build.dir}/AIInterface.jar</systemPath>
		</dependency>
		<dependency>
			<groupId>vecmath</groupId>
			<artifactId>vecmath</artifactId>
			<version>0.1</version>
			<scope>system</scope>
			<systemPath>${java.ai.int.src.dir}/data/jlib/vecmath.jar</systemPath>
		</dependency>
		<dependency>
			<groupId>jna</groupId>
			<artifactId>jna</artifactId>
			<version>0.1</version>
			<scope>system</scope>
			<systemPath>${java.ai.int.src.dir}/data/jlib/jna.jar</systemPath>
		</dependency>

		<dependency>
			<groupId>commons-logging</groupId>
			<artifactId>commons-logging</artifactId>
			<version>1.1.1</version>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>log4j</groupId>
			<artifactId>log4j</artifactId>
			<version>1.2.15</version>
			<scope>runtime</scope>
			<optional>true</optional>
			<!--
				Exclude these as they are not needed
				except for special scenarios,
				and because Maven can not auto-fetch them,
				due to copyright restrictions.
			-->
			<exclusions>
				<exclusion>
					<groupId>javax.mail</groupId>
					<artifactId>mail</artifactId>
				</exclusion>
				<exclusion>
					<groupId>com.sun.jdmk</groupId>
					<artifactId>jmxtools</artifactId>
				</exclusion>
				<exclusion>
					<groupId>com.sun.jmx</groupId>
					<artifactId>jmxri</artifactId>
				</exclusion>
				<exclusion>
					<groupId>javax.jms</groupId>
					<artifactId>jms</artifactId>
				</exclusion>
			</exclusions>
		</dependency>

		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-beans</artifactId>
			<version>2.5.6</version>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-support</artifactId>
			<version>2.0.8</version>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-context</artifactId>
			<version>2.5.6</version>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-aop</artifactId>
			<version>2.5.6</version>
			<scope>compile</scope>
		</dependency>

		<dependency>
			<groupId>org.beanshell</groupId>
			<artifactId>bsh</artifactId>
			<version>2.0b4</version>
			<!--<version>1.3.0</version>-->
			<scope>runtime</scope>
			<optional>true</optional>
		</dependency>
		<!--
			As JRuby 1.1.0+ is incompatible with scripting facilities
			in spring 2.5.6, we have to use an old version of jruby,
			and specify its dependencies manually.
			JRuby 1.1 support is scheduled for Spring 3.0;
			Spring 2.5.x keeps requiring JRuby 0.9 or 1.0.
		-->
		<dependency>
			<groupId>org.jruby</groupId>
			<artifactId>jruby</artifactId>
			<!--<version>1.2.0</version>
			<version>1.3.0RC1</version>-->
			<version>1.0.3</version>
			<optional>true</optional>
			<!--
				Note: The pom of this version is invalid, but it will work,
				cause we defined the dependencies manually.
				We need to use this version, as it is the last one
				compatible with spring versions < 3.
			-->
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<!-- JRuby 1.0.3 dependency -->
			<groupId>backport-util-concurrent</groupId>
			<artifactId>backport-util-concurrent</artifactId>
			<version>3.1</version>
			<scope>runtime</scope>
			<optional>true</optional>
		</dependency>
		<dependency>
			<!-- JRuby 1.0.3 dependency -->
			<groupId>asm</groupId>
			<artifactId>asm-all</artifactId>
			<version>2.1</version>
			<scope>runtime</scope>
			<optional>true</optional>
		</dependency>
		<dependency>
			<groupId>org.codehaus.groovy</groupId>
			<artifactId>groovy-all</artifactId>
			<version>1.6.2</version>
			<scope>runtime</scope>
			<optional>true</optional>
		</dependency>

		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.7</version>
			<scope>test</scope>
		</dependency>
	</dependencies>

</project>
