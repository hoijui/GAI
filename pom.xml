<project xmlns="http://maven.apache.org/POM/4.0.0"
		xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
		xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>gai</groupId>
	<artifactId>GAI</artifactId>
	<version>${my.version}</version>

	<packaging>jar</packaging>

	<name>General Artificial Intelligence</name>
	<description>A JVM based Skirmish AI plugin for the Spring RTS engine</description>
	<url>http://springrts.com/wiki/AI:GAI</url>
	<inceptionYear>2009</inceptionYear>


	<licenses>
		<license>
			<name>GPL</name>
			<url>http://www.gnu.org/licenses/gpl.html</url>
			<distribution>repo</distribution>
		</license>
	</licenses>


	<issueManagement>
		<system>Mantis</system>
		<url>http://springrts.com/mantis/</url>
	</issueManagement>


	<developers>
		<developer>
			<name>hoijui</name>
			<email>hoijui.quaero@gmail.com</email>
			<roles>
				<role>developer</role>
			</roles>
		</developer>
	</developers>

	<contributors>
		<contributor>
			<name>Agon</name>
			<roles>
				<role>ideas</role>
			</roles>
		</contributor>
	</contributors>


	<scm>
		<connection>scm:git:git://github.com/hoijui/GAI.git</connection>
		<developerConnection>scm:git:ssh://git@github.com:hoijui/GAI.git</developerConnection>
		<url>http://github.com/hoijui/GAI</url>
	</scm>


	<reporting>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jxr-plugin</artifactId>
				<version>2.2</version>
				<configuration>
					<sourceEncoding>${project.build.sourceEncoding}</sourceEncoding>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-checkstyle-plugin</artifactId>
				<version>2.6</version>
				<configuration>
					<sourceEncoding>${project.build.sourceEncoding}</sourceEncoding>
					<linkXref>true</linkXref>
					<configLocation>${project.build.resources[0].directory}/checkstyle.xml</configLocation>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-pmd-plugin</artifactId>
				<version>2.5</version>
				<configuration>
					<linkXref>true</linkXref>
					<sourceEncoding>${project.build.sourceEncoding}</sourceEncoding>
					<minimumTokens>50</minimumTokens>
					<targetJdk>1.5</targetJdk>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>findbugs-maven-plugin</artifactId>
				<version>2.3.1</version>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-javadoc-plugin</artifactId>
				<version>2.7</version>
				<configuration>
					<charset>${project.build.sourceEncoding}</charset>
					<encoding>${project.build.sourceEncoding}</encoding>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-changelog-plugin</artifactId>
				<version>2.2</version>
			</plugin>

		</plugins>
	</reporting>


	<properties>
		<my.version>0.1-SNAPSHOT</my.version>
		<!--
			This may get better support in Maven 3, see:
			http://docs.codehaus.org/display/MAVENUSER/POM+Element+for+Source+File+Encoding
		-->
		<project.build.encoding>UTF-8</project.build.encoding>
		<project.build.sourceEncoding>${project.build.encoding}</project.build.sourceEncoding>
		<project.build.resourceEncoding>${project.build.encoding}</project.build.resourceEncoding>
	</properties>


	<profiles>
		<profile>
			<id>as-spring-subproject</id>
			<!--
				Optional properties for this profile:
				* my.build.dir          (CAUTION: has to be relative to ${basedir};
				                         will fail with an absolute path!)
				* my.version
			-->
			<properties>
				<my.build.dir>target</my.build.dir>
			</properties>
			<build>
				<defaultGoal>package</defaultGoal>
				<finalName>SkirmishAI</finalName>
				<directory>${my.build.dir}</directory>
			</build>
		</profile>
	</profiles>

	<build>
		<outputDirectory>${project.build.directory}/classes</outputDirectory>
		<testOutputDirectory>${project.build.directory}/test-classes</testOutputDirectory>

		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<configuration>
					<source>1.5</source>
					<target>1.5</target>
					<encoding>${project.build.sourceEncoding}</encoding>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-resources-plugin</artifactId>
				<configuration>
					<encoding>UTF-8</encoding>
				</configuration>
			</plugin>

			<!--
				Modifies the jars manifest file,
				eg. adds the Main-Class attribute
			-->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
				<configuration>
					<archive>
						<manifest>
							<addClasspath>true</addClasspath>
							<classpathPrefix>dependency</classpathPrefix>
							<packageName>gai</packageName>
							<mainClass>gai.GAI</mainClass>
						</manifest>
					</archive>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-dependency-plugin</artifactId>
				<executions>
					<!--
						This copies the dependencies to the target/dependency dir
						during the package phase.
					-->
					<execution>
						<phase>generate-sources</phase>
						<goals>
							<goal>copy-dependencies</goal>
						</goals>
						<configuration>
							<outputDirectory>${project.build.directory}/jlib</outputDirectory>
							<excludeArtifactIds>Java-AIInterface</excludeArtifactIds>
						</configuration>
					</execution>
					<!--
						This generates a classpath out of all the dependencies
						of the project, valid on the local system, and stores
						it in a text file.
					-->
					<execution>
						<id>build-classpath</id>
						<phase>package</phase>
						<goals>
							<goal>build-classpath</goal>
						</goals>
						<configuration>
							<outputFile>${project.build.directory}/cp.txt</outputFile>
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>

	<dependencies>
		<!--
			For finding Maven dependencies, go to:
			http://www.mvnrepository.com/search.html
		-->

		<!-- Spring AI API -->
		<dependency>
			<groupId>com.springrts</groupId>
			<artifactId>ai-interface-java</artifactId>
			<version>0.1</version>
		</dependency>
		<dependency>
			<groupId>com.springrts</groupId>
			<artifactId>ai-wrapper-javaoo</artifactId>
			<version>0.1</version>
		</dependency>

		<!-- Logging -->
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
			<version>1.6.1</version>
		</dependency>
		<dependency>
			<groupId>ch.qos.logback</groupId>
			<artifactId>logback-classic</artifactId>
			<version>0.9.28</version>
			<scope>runtime</scope>
		</dependency>

		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-beans</artifactId>
			<version>2.5.6</version>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-support</artifactId>
			<version>2.0.8</version>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-context</artifactId>
			<version>2.5.6</version>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-aop</artifactId>
			<version>2.5.6</version>
			<scope>compile</scope>
		</dependency>

		<dependency>
			<groupId>org.beanshell</groupId>
			<artifactId>bsh</artifactId>
			<version>2.0b4</version>
			<!--<version>1.3.0</version>-->
			<scope>runtime</scope>
			<optional>true</optional>
		</dependency>
		<!--
			As JRuby 1.1.0+ is incompatible with scripting facilities
			in spring 2.5.6, we have to use an old version of jruby,
			and specify its dependencies manually.
			JRuby 1.1 support is scheduled for Spring 3.0;
			Spring 2.5.x keeps requiring JRuby 0.9 or 1.0.
		-->
		<dependency>
			<groupId>org.jruby</groupId>
			<artifactId>jruby</artifactId>
			<!--<version>1.2.0</version>
			<version>1.3.0RC1</version>-->
			<version>1.0.3</version>
			<optional>true</optional>
			<!--
				Note: The pom of this version is invalid, but it will work,
				cause we defined the dependencies manually.
				We need to use this version, as it is the last one
				compatible with spring versions < 3.
			-->
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<!-- JRuby 1.0.3 dependency -->
			<groupId>backport-util-concurrent</groupId>
			<artifactId>backport-util-concurrent</artifactId>
			<version>3.1</version>
			<scope>runtime</scope>
			<optional>true</optional>
		</dependency>
		<dependency>
			<!-- JRuby 1.0.3 dependency -->
			<groupId>asm</groupId>
			<artifactId>asm-all</artifactId>
			<version>2.1</version>
			<scope>runtime</scope>
			<optional>true</optional>
		</dependency>
		<dependency>
			<groupId>org.codehaus.groovy</groupId>
			<artifactId>groovy-all</artifactId>
			<version>1.6.2</version>
			<scope>runtime</scope>
			<optional>true</optional>
		</dependency>

		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.7</version>
			<scope>test</scope>
		</dependency>
	</dependencies>

</project>
